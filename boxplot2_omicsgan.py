# -*- coding: utf-8 -*-
"""Boxplot2_omicsGAN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZK9ZPuypEDfJbEBzOkUAEpI4bGoyeQ7R
"""

import pandas as pd
import numpy as np
import statistics
import matplotlib.pyplot as plt
import seaborn


"""**gene expression**"""

population_a = pd.read_csv("/content/drive/MyDrive/omicData/boxPlot_mRNA_50data.csv",index_col=0)
population_b = pd.read_csv("/content/drive/MyDrive/omicData/boxPlot_sys_mRNA_50data.csv",index_col=0)
population_c = pd.read_csv("/content/drive/MyDrive/omicData/syn_mRNA_10TImes_50Data.csv",index_col=0)
data11 = [population_a]
#data

c11=[]
for i in population_a.columns:
  for j in population_a.index:
    c11.append(population_a[i][j])

c22=[]
for i in population_b.columns:
  for j in population_b.index:
    c22.append(population_b[i][j])

c33=[]
for i in population_c.columns:
  for j in population_c.index:
    c33.append(population_c[i][j])

#population_aa = c11
#population_bb = c22
#population_cc = c33
#data1 = [population_aa, population_bb, population_cc]
#data1



 
 
def plot_box_swarm(data, y_axis_label, x_labels, plot_title, figure_name):
 
    #seaborn.set(color_codes=True)
    plt.figure(1, figsize=(9, 6))
 
    # add title to plot
    plt.title(plot_title)
 
    # plot data on swarmplot and boxplot
    seaborn.swarmplot(data=data, color=".25")
    palette = ['plum']
    ax = seaborn.boxplot(data=data ,palette=palette)
    
    current_palette = seaborn.color_palette()
    
   
 
    # y-axis label
    ax.set(ylabel=y_axis_label)
    ax.tick_params(axis='y', labelsize=24 )
    plt.ylabel('Accuracy Score', fontweight='bold', fontsize=24.0)
 
    # write labels with number of elements
    ax.set_xticklabels(["{}".format(l, len(data11[x])) for x, l in enumerate(x_labels)], fontsize=26, fontweight="bold")
    
 
    # write figure file with quality 400 dpi
    plt.savefig(figure_name, bbox_inches='tight', dpi=800)
    plt.close()
 
 
# set seed for same plot can be re-generated on example presented here using np.random.normal
np.random.seed(11)
 
# create random distributions 
population_aa = c11
population_bb = c22
population_cc = c33
data = population_aa
 
x_labels = ["Gene_exp"]
y_axis_label = "Accuracy score"
 
plot_box_swarm(data, y_axis_label, x_labels, "", "gene_exp.png")




import statistics 
 
print("gene expression") 
print("Standard Deviation of the sample is % s "% (statistics.stdev(c11)))
print("Mean of the sample is % s " % (statistics.mean(c11)))
print("Median of the sample is % s " % (statistics.median(c11)))

print("sys_mRNA") 
print("Standard Deviation of the sample is % s "% (statistics.stdev(c22)))
print("Mean of the sample is % s " % (statistics.mean(c22)))
print("Median of the sample is % s " % (statistics.median(c22)))

print("random network") 
print("Standard Deviation of the sample is % s "% (statistics.stdev(c33)))
print("Mean of the sample is % s " % (statistics.mean(c33)))
print("Median of the sample is % s " % (statistics.median(c33)))



"""**metylation**"""

population_aa = pd.read_csv("/content/drive/MyDrive/omicData/miRNABoxP_50data.csv",index_col=0)
population_bb = pd.read_csv("/content/drive/MyDrive/omicData/syn_miRNABoxP_50data.csv",index_col=0)
population_cc = pd.read_csv("/content/drive/MyDrive/omicData/syn_miRNA_10TImes_50Data.csv",index_col=0)
data7 = [population_cc]
#data7

c1a=[]
for i in population_aa.columns:
  for j in population_aa.index:
    c1a.append(population_aa[i][j])
#c1a

c1b=[]
for i in population_bb.columns:
  for j in population_bb.index:
    c1b.append(population_bb[i][j])
#c1b

c1c=[]
for i in population_cc.columns:
  for j in population_cc.index:
    c1c.append(population_cc[i][j])
#c1c

import matplotlib.pyplot as plt
import numpy as np
import seaborn
 
 
def plot_box_swarm(data, y_axis_label, x_labels, plot_title, figure_name):
 
    #seaborn.set(color_codes=True)
    plt.figure(1, figsize=(9, 6))
 
    # add title to plot
    plt.title(plot_title)
 
    # plot data on swarmplot and boxplot
    seaborn.swarmplot(data=data, color=".25")
    palette = ['b']
    ax = seaborn.boxplot(data=data ,palette=palette)
    
    current_palette = seaborn.color_palette()
    
   
 
    # y-axis label
    ax.set(ylabel=y_axis_label)
    ax.tick_params(axis='y', labelsize=24 )
    plt.ylabel('Accuracy Score', fontweight='bold', fontsize=24.0)
 
    # write labels with number of elements
    ax.set_xticklabels(["{}".format(l, len(data7[x])) for x, l in enumerate(x_labels)], fontsize=27, fontweight="bold")
    
 
    # write figure file with quality 400 dpi
    plt.savefig(figure_name, bbox_inches='tight', dpi=800)
    plt.close()
 
 
# set seed for same plot can be re-generated on example presented here using np.random.normal
np.random.seed(11)
 
# create random distributions 
population_aa = c1a
population_bb = c1b
population_cc = c1c
data12 = population_cc
 
#x_labels = ["DNA_methy", "sys_DNA_methy", "random network"]
x_labels = ["Random Network DNA methylation"]
y_axis_label = "Accuracy score"
 
plot_box_swarm(data12, y_axis_label, x_labels, "", "random_methy.png")



import statistics 
 
print("methylation") 
print("Standard Deviation of the sample is % s "% (statistics.stdev(c1a)))
print("Mean of the sample is % s " % (statistics.mean(c1a)))
print("Median of the sample is % s " % (statistics.median(c1a)))

print("sys_miRNA") 
print("Standard Deviation of the sample is % s "% (statistics.stdev(c1b)))
print("Mean of the sample is % s " % (statistics.mean(c1b)))
print("Median of the sample is % s " % (statistics.median(c1b)))

print("random network") 
print("Standard Deviation of the sample is % s "% (statistics.stdev(c1c)))
print("Mean of the sample is % s " % (statistics.mean(c1c)))
print("Median of the sample is % s " % (statistics.median(c1c)))

